<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAA
        AABhNDnwYTQ56WE0OeNhNDnkYTQ55GE0OeRhNDnkYTQ55GE0OeVhNDnmYTQ56mE0OfNhNDlHYTQ5AAAA
        AAAAAAAAYTQ56GE0OVFhNDkvYTQ5MWE0OTFhNDkxYTQ5MWE0OTFhNDkwYTQ5LWE0OTphNDnNYTQ5TmE0
        OQAAAAAAAAAAAGE0OdthNDkdYTQ5AGE0OQBhNDkAYTQ5AGE0OQBhNDkAYTQ5NGE0OVZhNDkTYTQ5hGE0
        OUhhNDkAAAAAAAAAAABhNDnbYTQ5IGE0OQBhNDkAYTQ5AGE0OQBhNDkAYTQ5AGE0OW9hNDmPYTQ5d2E0
        OVphNDkTYTQ5AGE0OQAAAAAAYTQ522E0OR9hNDkBYTQ5UGE0OXJhNDlxYTQ5YGE0OQ1hNDlsYTQ5PGE0
        OZxhNDnYYTQ5JGE0OQBhNDkAAAAAAGE0OdthNDkgYTQ5AGE0OTthNDlYYTQ5V2E0OU5hNDkKYTQ5g2E0
        OeFhNDn/YTQ5/2E0OYphNDkAYTQ5AGE0OQBhNDnbYTQ5H2E0OQFhNDlJYTQ5bGE0OWphNDlsYTQ5VWE0
        OU9hNDnyYTQ5/2E0Of9hNDnnYTQ5MmE0OQBhNDkAYTQ522E0OR9hNDkCYTQ5WWE0OXthNDl5YTQ5emE0
        OW1hNDkWYTQ5nmE0Of9hNDn/YTQ5/2E0OZ1hNDkEYTQ5AGE0OdthNDkfYTQ5AGE0OSthNDk9YTQ5PWE0
        OT5hNDk/YTQ5OWE0OURhNDnoYTQ5/2E0Of9hNDnwYTQ5QWE0OQBhNDnhYTQ5JmE0OQBhNDllYTQ5lGE0
        OZRhNDmVYTQ5lWE0OZBhNDkxYTQ5jGE0Of9hNDn/YTQ5/2E0ObBhNDkLYTQ5/GE0ObFhNDliYTQ5KWE0
        OQdhNDkAYTQ5BGE0OQlhNDkJYTQ5AWE0OShhNDneYTQ5/2E0OfFhNDm8YTQ5VWE0OedhNDnnYTQ5sGE0
        OcdhNDmwYTQ5MWE0OVBhNDmeYTQ5nGE0OVFhNDkAYTQ5fGE0OdVhNDlIYTQ5FmE0OYthNDlcYTQ51mE0
        OVVhNDkwYTQ52mE0OVRhNDkQYTQ5JmE0OSZhNDkTYTQ5AmE0OThhNDl/YTQ5DmE0OUZhNDmeYTQ5AGE0
        OWZhNDnRYTQ5YGE0OclhNDksYTQ5AGE0OQBhNDkAYTQ5AGE0OQVhNDl8YTQ5amE0OY9hNDl0YTQ5IWE0
        OQBhNDkCYTQ5eGE0Oe5hNDniYTQ5VGE0OT9hNDlAYTQ5QGE0OUBhNDlHYTQ5yGE0OVJhNDkVYTQ5AmE0
        OQBhNDkAYTQ5AGE0OQhhNDmVYTQ592E0OfJhNDnwYTQ572E0Oe9hNDnvYTQ58WE0OfNhNDlKYTQ5AGE0
        OQBhNDkAAAMAAAADAAAAAwAAAAEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAA==
</value>
  </data>
</root>